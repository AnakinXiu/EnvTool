#
# EnvTool OpenWatcom makefile.
#

CC      = wcc386
CPP     = wpp386
CFLAGS  = -bt=nt -mf -w6 -d2 -zq -zc -zm -3r -fr=nul &
          -DEVERYTHINGUSERAPI= -DEVERYTHINGAPI=__cdecl

LINK    = wlink option quiet, map, eliminate, caseexact system nt debug all sort global
EX_LIBS = advapi32.lib imagehlp.lib version.lib shfolder.lib &
          wintrust.lib crypt32.lib user32.lib

OBJECTS = envtool.obj  envtool_py.obj Everything.obj color.obj dirlist.obj misc.obj &
          searchpath.obj show_ver.obj getopt_long.obj win_ver.obj

all: cflags_Watcom.h ldflags_Watcom.h  envtool.exe

.ERASE
envtool.exe: $(OBJECTS) envtool.res
	$(LINK) name $*.exe option res=envtool.res file { $(OBJECTS) } library { $(EX_LIBS) }
	copy /y envtool.exe ..
	@echo $*.exe successfully built.

.ERASE
dirlist.exe: dirlist.c misc.obj color.obj getopt_long.obj
	$(CC) $(CFLAGS) -DDIRLIST_TEST dirlist.c
	$(LINK) name $*.exe file { dirlist.obj misc.obj color.obj getopt_long.obj } library { $(EX_LIBS) }
	rm dirlist.obj

.ERASE
win_trust.exe: win_trust.c misc.obj color.obj getopt_long.obj
	$(CC) $(CFLAGS) -DWINTRUST_TEST win_trust.c
	$(LINK) name $*.exe file { win_trust.obj misc.obj color.obj getopt_long.obj } &
	        library { $(EX_LIBS) }
	rm win_trust.obj

.ERASE
show_ver.obj: show_ver.c
	$(CPP) $(CFLAGS) $[@

.ERASE
.c.obj:
	$(CC) $(CFLAGS) $[@

.ERASE
cflags_Watcom.h: Makefile.Watcom
	@echo const char *cflags = "$(CC) $(CFLAGS)"; > $@

.ERASE
ldflags_Watcom.h: Makefile.Watcom
	@echo const char *ldflags = "$(LINK) name envtool.exe option res=envtool.res file { $(OBJECTS) } library { $(EX_LIBS) }"; > $@

envtool.res: envtool.rc
	wrc -D__WATCOMC__ -DRC_INVOKED -r -zm -fo=envtool.res envtool.rc

clean: .SYMBOLIC
	- rm $(OBJECTS) envtool.map envtool.res envtool.exe cflags_Watcom.h ldflags_Watcom.h

